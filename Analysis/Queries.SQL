-- What flights the company’s frequent flyers take?
WITH FLIGHTS
        AS (SELECT ('FROM: ' || SRC.CITY || ' TO: ' || DEST.CITY) AS FLIGHT
              FROM FREQUENTFLYERS FF
                   INNER JOIN AIRPORTDIM SRC
                      ON FF.SRCAIRPORTKEY = SRC.AIRPORTKEY
                   INNER JOIN AIRPORTDIM DEST
                      ON FF.DSTAIRPORTKEY = DEST.AIRPORTKEY)
  SELECT FLIGHT, COUNT (*) AS FREQUENCY
    FROM FLIGHTS
GROUP BY FLIGHT
ORDER BY FREQUENCY DESC;

-- What Fare the company’s frequent flyers pay? 
  SELECT FB.DESCRIPTION, COUNT (*) AS FREQUENCY
    FROM FREQUENTFLYERS FF INNER JOIN FAREBASISDIM FB ON FF.FBKEY = FB.FBKEY
GROUP BY FB.DESCRIPTION
ORDER BY FREQUENCY DESC;

-- How often our frequent flyers upgrade?
  SELECT DISTINCT CLASS.CLASSCHANGE,
   ROUND(COUNT (*) OVER (PARTITION BY CLASS.CLASSCHANGE ) 
   / COUNT(*) OVER (), 2) AS Class_Change_Rates
    FROM FREQUENTFLYERS FF 
    INNER JOIN CLASSDIM CLASS ON FF.CLASSKEY = CLASS.CLASSKEY;

-- How frequent flyers earn and redeem their frequent flyer miles?
WITH POINTS_EARNED
        AS (SELECT DISTINCT
                   PD.TYPE TYPE,
                   SUM (POINTSEARNED) OVER () AS TOTAL_MILES_EARNED,
                   SUM (POINTSEARNED) OVER (PARTITION BY PD.TYPE)
                      AS PROMOTION_MILES_EARNED
              FROM    FREQUENTFLYERS FF
                   INNER JOIN
                      PROMOTIONDIM PD
                   ON PD.PROMOTIONKEY = FF.PROMOTIONKEY)
SELECT TOTAL_MILES_EARNED,
       PROMOTION_MILES_EARNED,
       ROUND (PROMOTION_MILES_EARNED / TOTAL_MILES_EARNED, 2) RATIO
  FROM POINTS_EARNED
 WHERE TYPE = 'bonus miles';


   SELECT SRC.COUNTRY FROM_, DEST.COUNTRY TO_, SUM (POINTSEARNED) AS POINTS
    FROM FREQUENTFLYERS FF
         INNER JOIN AIRPORTDIM SRC
            ON FF.SRCAIRPORTKEY = SRC.AIRPORTKEY
         INNER JOIN AIRPORTDIM DEST
            ON FF.DSTAIRPORTKEY = DEST.AIRPORTKEY
GROUP BY SRC.COUNTRY, DEST.COUNTRY
ORDER BY POINTS DESC;


-- The number of flights flown as a response to special fare promotions each year.
  SELECT YEAR, COUNT (*)
    FROM FREQUENTFLYERS FF
         INNER JOIN FAREBASISDIM FB
            ON FF.FBKEY = FB.FBKEY
         INNER JOIN DATEDIM DD
            ON DD.DATEKEY = FF.RESERVATIONDATE
   WHERE FB.DESCRIPTION LIKE '%Promotional%'
GROUP BY DD.YEAR
ORDER BY YEAR;

-- Average overnight stand duration
SELECT AVG (OVERNIGHTSTAND) HOURS
  FROM FREQUENTFLYERS ;

-- 7-	What proportion of these frequent flyers have gold, platinum or titanium status.
SELECT DISTINCT
       SD.NAME,
       ROUND (
          COUNT (DISTINCT PASSENGERKEY) OVER (PARTITION BY SD.NAME)
          / COUNT (DISTINCT PASSENGERKEY) OVER (),
          2)
          AS RATIO
  FROM    FREQUENTFLYERS FF
       INNER JOIN
          STATUSDIM SD
       ON FF.STATUSKEY = SD.STUTUSKEY;
---------------------------------------------------------
-- Yearly revenue
  SELECT DD.YEAR,
         ROUND (SUM (TOTALFARE - DISCOUNT) / 1000000) || ' M$' AS REVENUE
    FROM RESERVATIONS RF INNER JOIN DATEDIM DD ON RF.DEPARTUREDATE = DD.DATEKEY
GROUP BY DD.YEAR
ORDER BY YEAR DESC;

-- Monthly revenue
  SELECT DD.MONTH,
         ROUND (SUM (TOTALFARE - DISCOUNT) / 1000000) || ' M$' AS REVENUE
    FROM RESERVATIONS RF INNER JOIN DATEDIM DD ON RF.DEPARTUREDATE = DD.DATEKEY
WHERE YEAR = 2024
GROUP BY DD.MONTH
ORDER BY MONTH;

-- Revenue Per Reservation Channel
SELECT CD.NAME, ROUND (SUM (TOTALFARE - DISCOUNT) / 1000000) || ' M$' REVENUE
    FROM    RESERVATIONS RF
         INNER JOIN
            CHANNELDIM CD
         ON RF.CHANNELKEY = CD.CHANNELKEY
GROUP BY CD.NAME
ORDER BY REVENUE DESC;

-- Yearly Revenue for each country 
  SELECT DD.YEAR,
         AD.COUNTRY,
         ROUND (SUM (TOTALFARE - DISCOUNT) / 1000) || ' K$' AS REVENUE
    FROM RESERVATIONS RF
         INNER JOIN DATEDIM DD
            ON RF.DEPARTUREDATE = DD.DATEKEY
         INNER JOIN AIRPORTDIM AD
            ON AD.AIRPORTKEY = RF.SRCAIRPORTKEY
GROUP BY DD.YEAR, COUNTRY
ORDER BY YEAR DESC, REVENUE DESC;

-- Top Selling Year
  SELECT DD.YEAR,
         ROUND (SUM (TOTALFARE - DISCOUNT) / 1000) || ' K$' AS REVENUE
    FROM RESERVATIONS RF
         INNER JOIN DATEDIM DD
            ON RF.DEPARTUREDATE = DD.DATEKEY
GROUP BY DD.YEAR
ORDER BY REVENUE DESC;

-- Top selling months
SELECT DD.MONTH,
         ROUND (SUM (TOTALFARE - DISCOUNT) / 1000) || ' K$' AS REVENUE
    FROM RESERVATIONS RF
         INNER JOIN DATEDIM DD
            ON RF.DEPARTUREDATE = DD.DATEKEY
GROUP BY DD.MONTH
ORDER BY SUM (TOTALFARE - DISCOUNT) DESC;

-- Most Profitable Customer Segment
  SELECT PPD.FREQUENTFLYERTIER,
         ROUND (SUM (TOTALFARE - DISCOUNT) / 1000) || ' K$' AS REVENUE
    FROM    RESERVATIONS RF
         INNER JOIN
            PASSENGERPROFILEDIM PPD
         ON PPD.PROFILEKEY = RF.PROFILEKEY
GROUP BY FREQUENTFLYERTIER
ORDER BY REVENUE DESC;

-- What is our most profitable Booking Channel
  SELECT CD.NAME,
         ROUND (SUM (TOTALFARE - DISCOUNT) / 1000) || ' K$' AS REVENUE
    FROM    RESERVATIONS RF
         INNER JOIN
            CHANNELDIM CD
         USING(CHANNELKEY)
GROUP BY NAME
ORDER BY REVENUE DESC;

-- What is out most profitable Class
  SELECT CD.CLASSFLOWN,
         ROUND (SUM (TOTALFARE - DISCOUNT) / 1000) || ' K$' AS REVENUE
    FROM    RESERVATIONS RF
         INNER JOIN
            CLASSDIM CD
         USING(CLASSKEY)
GROUP BY CLASSFLOWN
ORDER BY REVENUE DESC;
-----------------------------------------------------------------
-- Yearly complaints, inquiries, feedback.
  SELECT YEAR, ID.TYPE, COUNT (*) COUNT
    FROM CUSTOMERCARE CCF
         INNER JOIN INTERACTION ID
            ON CCF.INTERACTIONKEY = ID.INTERACTIONKEY
         INNER JOIN DATEDIM DD
            ON DD.DATEKEY = CCF.SUBMISSIONDATE
GROUP BY TYPE, YEAR
ORDER BY YEAR DESC;

-- Do we receive severe complaints frequently?
SELECT ID.SEVERITY, COUNT (*) COUNT
    FROM    CUSTOMERCARE CCF
         INNER JOIN
            INTERACTION ID
         ON CCF.INTERACTIONKEY = ID.INTERACTIONKEY
   WHERE TYPE = 'Complaint'
GROUP BY ID.SEVERITY
ORDER BY COUNT DESC;

-- Acerage response delay
SELECT AVG (RESPONDEDELAY) AS MINUTES FROM CUSTOMERCARE;
-- Over the years
  SELECT YEAR, AVG (RESPONDEDELAY) AS MINUTES
    FROM    CUSTOMERCARE CC
         INNER JOIN
            DATEDIM DM
         ON CC.RESPONSEDATE = DM.DATEKEY
GROUP BY YEAR
ORDER BY YEAR DESC;

-- Average complaint resolution duration over the years
  SELECT YEAR, AVG (RESOLUTIONDELAY) AS MINUTES
    FROM CUSTOMERCARE CC
         INNER JOIN DATEDIM DM
            ON CC.RESOLUTIONDATE = DM.DATEKEY
         INNER JOIN INTERACTION ID
            ON ID.INTERACTIONKEY = CC.INTERACTIONKEY
   WHERE ID.TYPE = 'Complaint'
GROUP BY YEAR
ORDER BY YEAR DESC;

-- Which booking channel received the most complaints?
  SELECT CD.NAME CHANNEL, COUNT (*) COMPLAINTS
    FROM CUSTOMERCARE CC
         INNER JOIN DATEDIM DM
            ON CC.SUBMISSIONDATE = DM.DATEKEY
         INNER JOIN INTERACTION ID
            ON ID.INTERACTIONKEY = CC.INTERACTIONKEY
         INNER JOIN CHANNELDIM CD
            USING (CHANNELKEY)
   WHERE ID.TYPE = 'Complaint'
GROUP BY CD.NAME
ORDER BY COMPLAINTS DESC;
--------------------------------------------------------------------
-- Count of flights organized
  SELECT YEAR, COUNT (*) FLIGHTS
    FROM    FLIGHTACTIVITY FA
         INNER JOIN
            DATEDIM DM
         ON FA.SCHEDULEDDEPDATEKEY = DM.DATEKEY
GROUP BY YEAR
ORDER BY YEAR DESC;


  SELECT MONTH, COUNT (*) FLIGHTS
    FROM    FLIGHTACTIVITY FA
         INNER JOIN
            DATEDIM DM
         ON FA.SCHEDULEDDEPDATEKEY = DM.DATEKEY
    WHERE YEAR = 2024 
GROUP BY MONTH
ORDER BY MONTH;

-- Our most populare routes
WITH FLIGHTS
        AS (SELECT ('FROM: ' || SRC.CITY || ' TO: ' || DEST.CITY) AS FLIGHT
              FROM FLIGHTACTIVITY FA
                   INNER JOIN AIRPORTDIM SRC
                      ON FA.SRCAIRPORTKEY = SRC.AIRPORTKEY
                   INNER JOIN AIRPORTDIM DEST
                      ON FA.DSTAIRPORTKEY = DEST.AIRPORTKEY)
  SELECT FLIGHT, COUNT (*) AS FREQUENCY
    FROM FLIGHTS
GROUP BY FLIGHT
ORDER BY FREQUENCY DESC;

WITH FLIGHTS
        AS (SELECT ('FROM: ' || SRC.COUNTRY || ' TO: ' || DEST.COUNTRY) AS FLIGHT
              FROM FLIGHTACTIVITY FA
                   INNER JOIN AIRPORTDIM SRC
                      ON FA.SRCAIRPORTKEY = SRC.AIRPORTKEY
                   INNER JOIN AIRPORTDIM DEST
                      ON FA.DSTAIRPORTKEY = DEST.AIRPORTKEY)
  SELECT FLIGHT, COUNT (*) AS FREQUENCY
    FROM FLIGHTS
GROUP BY FLIGHT
ORDER BY FREQUENCY DESC;

-- average empty seat per flight each year
  SELECT YEAR, ROUND (AVG (EMPTYSEATS)) AS SEATS
    FROM    FLIGHTACTIVITY FA
         INNER JOIN
            DATEDIM DM
         ON FA.ACTUALARRDATEKEY = DM.DATEKEY
GROUP BY YEAR
ORDER BY YEAR DESC;

-- Average flight fuel consumption
  SELECT YEAR, ROUND (AVG (FUELCONSUMPTION)) AS LITRE
    FROM    FLIGHTACTIVITY FA
         INNER JOIN
            DATEDIM DM
         ON FA.ACTUALARRDATEKEY = DM.DATEKEY
GROUP BY YEAR
ORDER BY YEAR DESC;